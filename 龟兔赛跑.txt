1. 龟兔赛跑
（模拟程序：龟兔赛跑）在这个问题中，我们将再现经典的龟兔赛跑。  程序中使用随机数生成法来开发一个模拟这一著名事件的应用程序。

比赛场地为70个方格，参赛者从“方格1”开始出发，每个方格代表比赛过程中所经过的一个位置。终点为“方格70”。最先到达或者通过“方格70”的参赛者将赢得一桶新鲜的胡萝卜和莴苣。在比赛过程中可能会经过一段很滑的山路，所有参赛者可能会滑倒。

程序中有一只时钟，美妙滴答一次，程序应该根据下列规则来调整动物的位置：

|移动类型|时间百分比|实际移动|
乌龟
|快速走 |**50%*|向右03格|
|滑倒 |20%*|向左06格|
 |慢速走* |***30%****|向右01格|
兔兔
|睡觉 |20%*|原地不动|
    |大跳 |20%*|向右09格|
    |大滑倒 |**10%*|向左12格|
    |小跳 |30%*|向右01格|
 |小滑倒* |***20%****|向左02格|
使用几个变量来跟踪动物的位置（即1-70号）。在位置1（即起跑线）上启动每个动物。如果动物在方格1前向左滑动，则将的动物移回方格1。

通过产生一个随机数i来生成上表中的百分比，i的范围是1<=i<=10。对于乌龟而言，当1<=i<=5时“快速走”，当6<=i<=7时“打滑”，当8<=i<=10时“慢速走”。
使用类似的方法来移动兔兔。比赛开始时打印以下字符串:

BANG!!!!(砰！)

AND THE’RE OFF！！！（他们出发了！！！）

程序继续执行，时钟每滴答一次（即每循环一次），就打印70号方格位置的一条线，其中乌龟的位置用T表示，兔兔的位置用H表示。偶尔，竞赛者每会挤到同一个格子上。此时，乌龟会咬兔兔，程序要在这个位置上打印“OUCH！！！”（哎呦！！！）。所有不是T、H或OUCH！！！（僵局情形）的地方都用空格代替。

打印出每行之后，确定每个动物是否到达或者穿过了70号方格。如果有，这打印出胜者并终止模拟程序。如果是乌龟胜利了，则打印“TORTOISE WINS！！！YAY！！！”，如果是兔兔获胜了，则打印“Hare wins.Yuch”。如果两个动物在同一时刻打成平手，那么应当表扬乌龟（因其处于劣势），或者打印“It’s a tie”。如果没有动物获胜，就再执行一遍循环来模拟时钟的下个时刻。

2. 某个公司采用公用电话传递数据信息，数据是小于8位的整数，为了确保安全，5698234 ―》 4328965 ―-》9873410 ―  》 0873419
 在传递过程中需要加密，加密规则如下：

 首先将数据倒序，然后将每位数字都加上5，再用和除以10的余数代替该数字，
 最后将第一位和最后一位数字交换。 请任意给定一个小于8位的整数，
 然后，把加密后的结果在控制台打印出来。 

3.程序读取某个文本文件，输出文本文件的内容到控制台上；
然后允许用户循环从该文件中查找单词，用户输入-1退出程序。
查询的结果是该单词出现的次数，并列出每次出现所在的行。
如果某单词在同一行中多次出现，程序将只显示该行一次，但次数要都统计在内。
行号按升序显示，即第 1行应该在第 2 行之前输出，依此类推。


